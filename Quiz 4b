Question 1
In Python, [1, 2, 3] is of type list. What is the name of the type of (1, 2, 3)?

Your Answer		Score	Explanation
Pair			
Set			
Array			
Tuple	Correct	10.00	
Triple			
Total		10.00 / 10.00	
Question 2
Which of the following types of data are immutable in Python?

Your Answer		Score	Explanation
Numbers	Correct	2.00	
Booleans	Correct	2.00	
Lists	Correct	2.00	
Strings	Correct	2.00	
Tuples	Correct	2.00	
Total		10.00 / 10.00	
Question 3
Which of the following functions must include a global point declaration in order to change the global variable point?

point = [0, 0]

def function1():
    point[0] += 1
    point[1] += 2

def function2():
    point = [50, 50]
Your Answer		Score	Explanation
function2	Correct	5.00	
function1	Correct	5.00	
Total		10.00 / 10.00	
Question 4
Consider the following three similar programs. Read them carefully to observe their differences.

a = range(5)

def mutate(a):
    a[3] = 100

mutate(a)
print a[3]
a = range(5)

def mutate(b):
    a[3] = 100

mutate(a)
print a[3]
a = range(5)

def mutate(b):
    b[3] = 100

mutate(a)
print a[3]
We would like to know whether these all accomplish the same thing. What are the three values, respectively, printed by these three pieces of code? Separate the values only with spaces.

Answer for Question 4
You entered:

Your Answer		Score	Explanation
100	Correct	3.33	
100	Correct	3.33	
100	Correct	3.33	
Total		10.00 / 10.00	
Question 5
In our program, the variable position represents a 2D position on the canvas. We want to be able to change the position by some amount in variable delta. Why is the following code snippet incorrect?

position = [50, 50]
delta = [1, -2]
…
position = position + delta
Note that the ellipses represent that we might have code in between what is shown, but such code is irrelevant and omitted.

Your Answer		Score	Explanation

Lists do not support the + operator.


The numbers in position cannot be changed.


One of the elements of delta is negative.


The + operator on lists does not mean addition of the numbers in a list.

Correct	10.00	
Total		10.00 / 10.00	
Question 6
Consider the following program.

a = ["green", "blue", "white", "black"]
b = a
c = list(a)
d = c
a[3] = "red"
c[2] = a[1]
b = a[1 : 3]
b[1] = c[2]
At the end of this code, to how many list objects do the variables refer?

If you run the code and print the variables' values, you can begin to answer this question. After all, if two variables print differently, they certainly can't refer to the same object. However, if two variables print the same, you still need to determine whether they refer to the same object. One way is to step through the code while drawing reference diagrams. Another is to mutate one and see if others also mutate.

Your Answer		Score	Explanation
2			
1 — The four variables each refer to the same list.			
4 — The four variables each refer to different lists.			
3	Correct	10.00	
Total		10.00 / 10.00	
Question 7
Convert the following specification into code. Do the point and rectangle ever overlap?

A point starts at [10, 20]. It repeatedly changes position by [3, 0.7] — e.g., under button or timer control. Meanwhile, a rectangle stays in place. Its corners are at [50, 50] (upper left), [180, 50] (upper right), [180, 140] (lower right), and [50, 140] (lower left).

To check for overlap, i.e., collision, just run your code and check visually. You do not need to implement a point-rectangle collision test. However, we encourage you to think about how you would implement such a test.

Your Answer		Score	Explanation
Yes	Correct	10.00	
No			
Total		10.00 / 10.00	
Question 8
Assume we are using acceleration control for a spaceship in a game. That is, we regularly have the following updates:

The position is incremented by the time interval multiplied by the velocity. This happens on each draw event.
The velocity is incremented by the time interval multiplied by the acceleration. This happens on each draw event.
The acceleration is periodically incremented by some fixed vector (the same vector for each step). This could happen on keyboard or timer events.
Assume that, initially, the ship is stationary and subject to no acceleration. What sort of trajectory will the spaceship fly in?

Either figure this out mathematically, or implement it in CodeSkulptor and see what happens.

Your Answer		Score	Explanation
A non-linear, smooth curve			
Spiral			
A straight line	Correct	10.00	
Since the change to acceleration is a fixed vector, both the acceleration and velocity will always be a multiple of this fixed vector. Therefore, the trajectory of the ship will follow a straight line in the direction of the fixed vector.

Unpredictable			
Total		10.00 / 10.00	
Question Explanation

Remember that the ship starts at rest with no initial acceleration. If the ship can accelerate in only one direction, what is its trajectory?
Question 9
Write a Python program that initializes a global variable to 5. The keydown event handler updates this global variable by doubling it, while the keyup event handler updates it by decrementing it by 3.

What is the value of the global variable after 12 separate key presses, i.e., pressing and releasing one key at a time, and repeating this 12 times in total?

To test your code, the global variable's value should be 35 after 4 key presses.

Answer for Question 9
You entered:

Your Answer		Score	Explanation
8195	Correct	20.00	
Total		20.00 / 20.00	
